// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        (unknown)
// source: headscale/v1/acl.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Protocol_Enum int32

const (
	// defaults to ICMPv4, ICMPv6, TCP, and UDP
	Protocol_ANY  Protocol_Enum = 0
	Protocol_TCP  Protocol_Enum = 1
	Protocol_UDP  Protocol_Enum = 2
	Protocol_ICMP Protocol_Enum = 3
	Protocol_SCTP Protocol_Enum = 4
	Protocol_IGMP Protocol_Enum = 5
	Protocol_IPV4 Protocol_Enum = 6
	Protocol_EGP  Protocol_Enum = 7
	Protocol_IGP  Protocol_Enum = 8
	Protocol_GRE  Protocol_Enum = 9
	Protocol_AH   Protocol_Enum = 10
)

// Enum value maps for Protocol_Enum.
var (
	Protocol_Enum_name = map[int32]string{
		0:  "ANY",
		1:  "TCP",
		2:  "UDP",
		3:  "ICMP",
		4:  "SCTP",
		5:  "IGMP",
		6:  "IPV4",
		7:  "EGP",
		8:  "IGP",
		9:  "GRE",
		10: "AH",
	}
	Protocol_Enum_value = map[string]int32{
		"ANY":  0,
		"TCP":  1,
		"UDP":  2,
		"ICMP": 3,
		"SCTP": 4,
		"IGMP": 5,
		"IPV4": 6,
		"EGP":  7,
		"IGP":  8,
		"GRE":  9,
		"AH":   10,
	}
)

func (x Protocol_Enum) Enum() *Protocol_Enum {
	p := new(Protocol_Enum)
	*p = x
	return p
}

func (x Protocol_Enum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Protocol_Enum) Descriptor() protoreflect.EnumDescriptor {
	return file_headscale_v1_acl_proto_enumTypes[0].Descriptor()
}

func (Protocol_Enum) Type() protoreflect.EnumType {
	return &file_headscale_v1_acl_proto_enumTypes[0]
}

func (x Protocol_Enum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Protocol_Enum.Descriptor instead.
func (Protocol_Enum) EnumDescriptor() ([]byte, []int) {
	return file_headscale_v1_acl_proto_rawDescGZIP(), []int{1, 0}
}

type ACL_Action int32

const (
	ACL_UNKNOWN ACL_Action = 0
	ACL_ACCEPT  ACL_Action = 1
)

// Enum value maps for ACL_Action.
var (
	ACL_Action_name = map[int32]string{
		0: "UNKNOWN",
		1: "ACCEPT",
	}
	ACL_Action_value = map[string]int32{
		"UNKNOWN": 0,
		"ACCEPT":  1,
	}
)

func (x ACL_Action) Enum() *ACL_Action {
	p := new(ACL_Action)
	*p = x
	return p
}

func (x ACL_Action) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ACL_Action) Descriptor() protoreflect.EnumDescriptor {
	return file_headscale_v1_acl_proto_enumTypes[1].Descriptor()
}

func (ACL_Action) Type() protoreflect.EnumType {
	return &file_headscale_v1_acl_proto_enumTypes[1]
}

func (x ACL_Action) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ACL_Action.Descriptor instead.
func (ACL_Action) EnumDescriptor() ([]byte, []int) {
	return file_headscale_v1_acl_proto_rawDescGZIP(), []int{2, 0}
}

type ACLPolicy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Groups        []*ACLGroup       `protobuf:"bytes,1,rep,name=groups,proto3" json:"groups,omitempty"`
	Hosts         []*ACLHost        `protobuf:"bytes,2,rep,name=hosts,proto3" json:"hosts,omitempty"`
	Acls          []*ACL            `protobuf:"bytes,3,rep,name=acls,proto3" json:"acls,omitempty"`
	AutoApprovers *ACLAutoApprovers `protobuf:"bytes,4,opt,name=auto_approvers,json=autoApprovers,proto3" json:"auto_approvers,omitempty"`
	TagOwners     []*ACLTagOwner    `protobuf:"bytes,5,rep,name=tag_owners,json=tagOwners,proto3" json:"tag_owners,omitempty"`
}

func (x *ACLPolicy) Reset() {
	*x = ACLPolicy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_headscale_v1_acl_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ACLPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ACLPolicy) ProtoMessage() {}

func (x *ACLPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_headscale_v1_acl_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ACLPolicy.ProtoReflect.Descriptor instead.
func (*ACLPolicy) Descriptor() ([]byte, []int) {
	return file_headscale_v1_acl_proto_rawDescGZIP(), []int{0}
}

func (x *ACLPolicy) GetGroups() []*ACLGroup {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *ACLPolicy) GetHosts() []*ACLHost {
	if x != nil {
		return x.Hosts
	}
	return nil
}

func (x *ACLPolicy) GetAcls() []*ACL {
	if x != nil {
		return x.Acls
	}
	return nil
}

func (x *ACLPolicy) GetAutoApprovers() *ACLAutoApprovers {
	if x != nil {
		return x.AutoApprovers
	}
	return nil
}

func (x *ACLPolicy) GetTagOwners() []*ACLTagOwner {
	if x != nil {
		return x.TagOwners
	}
	return nil
}

type Protocol struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Protocol) Reset() {
	*x = Protocol{}
	if protoimpl.UnsafeEnabled {
		mi := &file_headscale_v1_acl_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Protocol) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Protocol) ProtoMessage() {}

func (x *Protocol) ProtoReflect() protoreflect.Message {
	mi := &file_headscale_v1_acl_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Protocol.ProtoReflect.Descriptor instead.
func (*Protocol) Descriptor() ([]byte, []int) {
	return file_headscale_v1_acl_proto_rawDescGZIP(), []int{1}
}

type ACL struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action       ACL_Action    `protobuf:"varint,1,opt,name=action,proto3,enum=headscale.v1.ACL_Action" json:"action,omitempty"`
	Protocol     Protocol_Enum `protobuf:"varint,2,opt,name=protocol,proto3,enum=headscale.v1.Protocol_Enum" json:"protocol,omitempty"`
	Sources      []string      `protobuf:"bytes,3,rep,name=sources,proto3" json:"sources,omitempty"`
	Destinations []string      `protobuf:"bytes,4,rep,name=destinations,proto3" json:"destinations,omitempty"`
}

func (x *ACL) Reset() {
	*x = ACL{}
	if protoimpl.UnsafeEnabled {
		mi := &file_headscale_v1_acl_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ACL) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ACL) ProtoMessage() {}

func (x *ACL) ProtoReflect() protoreflect.Message {
	mi := &file_headscale_v1_acl_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ACL.ProtoReflect.Descriptor instead.
func (*ACL) Descriptor() ([]byte, []int) {
	return file_headscale_v1_acl_proto_rawDescGZIP(), []int{2}
}

func (x *ACL) GetAction() ACL_Action {
	if x != nil {
		return x.Action
	}
	return ACL_UNKNOWN
}

func (x *ACL) GetProtocol() Protocol_Enum {
	if x != nil {
		return x.Protocol
	}
	return Protocol_ANY
}

func (x *ACL) GetSources() []string {
	if x != nil {
		return x.Sources
	}
	return nil
}

func (x *ACL) GetDestinations() []string {
	if x != nil {
		return x.Destinations
	}
	return nil
}

type ACLGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Users []string `protobuf:"bytes,2,rep,name=users,proto3" json:"users,omitempty"`
}

func (x *ACLGroup) Reset() {
	*x = ACLGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_headscale_v1_acl_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ACLGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ACLGroup) ProtoMessage() {}

func (x *ACLGroup) ProtoReflect() protoreflect.Message {
	mi := &file_headscale_v1_acl_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ACLGroup.ProtoReflect.Descriptor instead.
func (*ACLGroup) Descriptor() ([]byte, []int) {
	return file_headscale_v1_acl_proto_rawDescGZIP(), []int{3}
}

func (x *ACLGroup) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ACLGroup) GetUsers() []string {
	if x != nil {
		return x.Users
	}
	return nil
}

type ACLHost struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	CidrBlock string `protobuf:"bytes,2,opt,name=cidr_block,json=cidrBlock,proto3" json:"cidr_block,omitempty"`
}

func (x *ACLHost) Reset() {
	*x = ACLHost{}
	if protoimpl.UnsafeEnabled {
		mi := &file_headscale_v1_acl_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ACLHost) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ACLHost) ProtoMessage() {}

func (x *ACLHost) ProtoReflect() protoreflect.Message {
	mi := &file_headscale_v1_acl_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ACLHost.ProtoReflect.Descriptor instead.
func (*ACLHost) Descriptor() ([]byte, []int) {
	return file_headscale_v1_acl_proto_rawDescGZIP(), []int{4}
}

func (x *ACLHost) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ACLHost) GetCidrBlock() string {
	if x != nil {
		return x.CidrBlock
	}
	return ""
}

type ACLTagOwner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tag   string   `protobuf:"bytes,1,opt,name=tag,proto3" json:"tag,omitempty"`
	Users []string `protobuf:"bytes,2,rep,name=users,proto3" json:"users,omitempty"`
}

func (x *ACLTagOwner) Reset() {
	*x = ACLTagOwner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_headscale_v1_acl_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ACLTagOwner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ACLTagOwner) ProtoMessage() {}

func (x *ACLTagOwner) ProtoReflect() protoreflect.Message {
	mi := &file_headscale_v1_acl_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ACLTagOwner.ProtoReflect.Descriptor instead.
func (*ACLTagOwner) Descriptor() ([]byte, []int) {
	return file_headscale_v1_acl_proto_rawDescGZIP(), []int{5}
}

func (x *ACLTagOwner) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *ACLTagOwner) GetUsers() []string {
	if x != nil {
		return x.Users
	}
	return nil
}

type ACLAutoApprovers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Routes    []*ACLRoutes `protobuf:"bytes,1,rep,name=routes,proto3" json:"routes,omitempty"`
	ExitNodes []string     `protobuf:"bytes,2,rep,name=exit_nodes,json=exitNodes,proto3" json:"exit_nodes,omitempty"`
}

func (x *ACLAutoApprovers) Reset() {
	*x = ACLAutoApprovers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_headscale_v1_acl_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ACLAutoApprovers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ACLAutoApprovers) ProtoMessage() {}

func (x *ACLAutoApprovers) ProtoReflect() protoreflect.Message {
	mi := &file_headscale_v1_acl_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ACLAutoApprovers.ProtoReflect.Descriptor instead.
func (*ACLAutoApprovers) Descriptor() ([]byte, []int) {
	return file_headscale_v1_acl_proto_rawDescGZIP(), []int{6}
}

func (x *ACLAutoApprovers) GetRoutes() []*ACLRoutes {
	if x != nil {
		return x.Routes
	}
	return nil
}

func (x *ACLAutoApprovers) GetExitNodes() []string {
	if x != nil {
		return x.ExitNodes
	}
	return nil
}

type ACLRoutes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Route string   `protobuf:"bytes,1,opt,name=route,proto3" json:"route,omitempty"`
	Users []string `protobuf:"bytes,2,rep,name=users,proto3" json:"users,omitempty"`
}

func (x *ACLRoutes) Reset() {
	*x = ACLRoutes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_headscale_v1_acl_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ACLRoutes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ACLRoutes) ProtoMessage() {}

func (x *ACLRoutes) ProtoReflect() protoreflect.Message {
	mi := &file_headscale_v1_acl_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ACLRoutes.ProtoReflect.Descriptor instead.
func (*ACLRoutes) Descriptor() ([]byte, []int) {
	return file_headscale_v1_acl_proto_rawDescGZIP(), []int{7}
}

func (x *ACLRoutes) GetRoute() string {
	if x != nil {
		return x.Route
	}
	return ""
}

func (x *ACLRoutes) GetUsers() []string {
	if x != nil {
		return x.Users
	}
	return nil
}

type CreateACLPolicyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User      string     `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	AclPolicy *ACLPolicy `protobuf:"bytes,2,opt,name=acl_policy,json=aclPolicy,proto3" json:"acl_policy,omitempty"`
}

func (x *CreateACLPolicyRequest) Reset() {
	*x = CreateACLPolicyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_headscale_v1_acl_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateACLPolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateACLPolicyRequest) ProtoMessage() {}

func (x *CreateACLPolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_headscale_v1_acl_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateACLPolicyRequest.ProtoReflect.Descriptor instead.
func (*CreateACLPolicyRequest) Descriptor() ([]byte, []int) {
	return file_headscale_v1_acl_proto_rawDescGZIP(), []int{8}
}

func (x *CreateACLPolicyRequest) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *CreateACLPolicyRequest) GetAclPolicy() *ACLPolicy {
	if x != nil {
		return x.AclPolicy
	}
	return nil
}

type CreateACLPolicyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateACLPolicyResponse) Reset() {
	*x = CreateACLPolicyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_headscale_v1_acl_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateACLPolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateACLPolicyResponse) ProtoMessage() {}

func (x *CreateACLPolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_headscale_v1_acl_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateACLPolicyResponse.ProtoReflect.Descriptor instead.
func (*CreateACLPolicyResponse) Descriptor() ([]byte, []int) {
	return file_headscale_v1_acl_proto_rawDescGZIP(), []int{9}
}

var File_headscale_v1_acl_proto protoreflect.FileDescriptor

var file_headscale_v1_acl_proto_rawDesc = []byte{
	0x0a, 0x16, 0x68, 0x65, 0x61, 0x64, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x61,
	0x63, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x68, 0x65, 0x61, 0x64, 0x73, 0x63,
	0x61, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x22, 0x90, 0x02, 0x0a, 0x09, 0x41, 0x43, 0x4c, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x12, 0x2e, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x68, 0x65, 0x61, 0x64, 0x73, 0x63, 0x61, 0x6c, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x43, 0x4c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x06, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x12, 0x2b, 0x0a, 0x05, 0x68, 0x6f, 0x73, 0x74, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x68, 0x65, 0x61, 0x64, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x43, 0x4c, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x05, 0x68, 0x6f, 0x73, 0x74,
	0x73, 0x12, 0x25, 0x0a, 0x04, 0x61, 0x63, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x68, 0x65, 0x61, 0x64, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x43, 0x4c, 0x52, 0x04, 0x61, 0x63, 0x6c, 0x73, 0x12, 0x45, 0x0a, 0x0e, 0x61, 0x75, 0x74, 0x6f,
	0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x68, 0x65, 0x61, 0x64, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x43, 0x4c, 0x41, 0x75, 0x74, 0x6f, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x73,
	0x52, 0x0d, 0x61, 0x75, 0x74, 0x6f, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x73, 0x12,
	0x38, 0x0a, 0x0a, 0x74, 0x61, 0x67, 0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x68, 0x65, 0x61, 0x64, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x43, 0x4c, 0x54, 0x61, 0x67, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x09,
	0x74, 0x61, 0x67, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x22, 0x78, 0x0a, 0x08, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x22, 0x6c, 0x0a, 0x04, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x07, 0x0a,
	0x03, 0x41, 0x4e, 0x59, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x54, 0x43, 0x50, 0x10, 0x01, 0x12,
	0x07, 0x0a, 0x03, 0x55, 0x44, 0x50, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x43, 0x4d, 0x50,
	0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x53, 0x43, 0x54, 0x50, 0x10, 0x04, 0x12, 0x08, 0x0a, 0x04,
	0x49, 0x47, 0x4d, 0x50, 0x10, 0x05, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x50, 0x56, 0x34, 0x10, 0x06,
	0x12, 0x07, 0x0a, 0x03, 0x45, 0x47, 0x50, 0x10, 0x07, 0x12, 0x07, 0x0a, 0x03, 0x49, 0x47, 0x50,
	0x10, 0x08, 0x12, 0x07, 0x0a, 0x03, 0x47, 0x52, 0x45, 0x10, 0x09, 0x12, 0x06, 0x0a, 0x02, 0x41,
	0x48, 0x10, 0x0a, 0x22, 0xd1, 0x01, 0x0a, 0x03, 0x41, 0x43, 0x4c, 0x12, 0x30, 0x0a, 0x06, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x68, 0x65,
	0x61, 0x64, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x43, 0x4c, 0x2e, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x37, 0x0a,
	0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1b, 0x2e, 0x68, 0x65, 0x61, 0x64, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x08, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x22, 0x21, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0b,
	0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x41,
	0x43, 0x43, 0x45, 0x50, 0x54, 0x10, 0x01, 0x22, 0x34, 0x0a, 0x08, 0x41, 0x43, 0x4c, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x22, 0x3c, 0x0a,
	0x07, 0x41, 0x43, 0x4c, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x69, 0x64, 0x72, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x69, 0x64, 0x72, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x22, 0x35, 0x0a, 0x0b, 0x41,
	0x43, 0x4c, 0x54, 0x61, 0x67, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x14, 0x0a, 0x05,
	0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x75, 0x73, 0x65,
	0x72, 0x73, 0x22, 0x62, 0x0a, 0x10, 0x41, 0x43, 0x4c, 0x41, 0x75, 0x74, 0x6f, 0x41, 0x70, 0x70,
	0x72, 0x6f, 0x76, 0x65, 0x72, 0x73, 0x12, 0x2f, 0x0a, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x68, 0x65, 0x61, 0x64, 0x73, 0x63, 0x61,
	0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x43, 0x4c, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x52,
	0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x78, 0x69, 0x74, 0x5f,
	0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x65, 0x78, 0x69,
	0x74, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x22, 0x37, 0x0a, 0x09, 0x41, 0x43, 0x4c, 0x52, 0x6f, 0x75,
	0x74, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x75, 0x73, 0x65,
	0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x22,
	0x64, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x43, 0x4c, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x36, 0x0a,
	0x0a, 0x61, 0x63, 0x6c, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x68, 0x65, 0x61, 0x64, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x43, 0x4c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x09, 0x61, 0x63, 0x6c, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x22, 0x19, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41,
	0x43, 0x4c, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x42, 0x29, 0x5a, 0x27, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f,
	0x72, 0x69, 0x2d, 0x65, 0x64, 0x67, 0x65, 0x2f, 0x68, 0x65, 0x61, 0x64, 0x73, 0x63, 0x61, 0x6c,
	0x65, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_headscale_v1_acl_proto_rawDescOnce sync.Once
	file_headscale_v1_acl_proto_rawDescData = file_headscale_v1_acl_proto_rawDesc
)

func file_headscale_v1_acl_proto_rawDescGZIP() []byte {
	file_headscale_v1_acl_proto_rawDescOnce.Do(func() {
		file_headscale_v1_acl_proto_rawDescData = protoimpl.X.CompressGZIP(file_headscale_v1_acl_proto_rawDescData)
	})
	return file_headscale_v1_acl_proto_rawDescData
}

var file_headscale_v1_acl_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_headscale_v1_acl_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_headscale_v1_acl_proto_goTypes = []interface{}{
	(Protocol_Enum)(0),              // 0: headscale.v1.Protocol.Enum
	(ACL_Action)(0),                 // 1: headscale.v1.ACL.Action
	(*ACLPolicy)(nil),               // 2: headscale.v1.ACLPolicy
	(*Protocol)(nil),                // 3: headscale.v1.Protocol
	(*ACL)(nil),                     // 4: headscale.v1.ACL
	(*ACLGroup)(nil),                // 5: headscale.v1.ACLGroup
	(*ACLHost)(nil),                 // 6: headscale.v1.ACLHost
	(*ACLTagOwner)(nil),             // 7: headscale.v1.ACLTagOwner
	(*ACLAutoApprovers)(nil),        // 8: headscale.v1.ACLAutoApprovers
	(*ACLRoutes)(nil),               // 9: headscale.v1.ACLRoutes
	(*CreateACLPolicyRequest)(nil),  // 10: headscale.v1.CreateACLPolicyRequest
	(*CreateACLPolicyResponse)(nil), // 11: headscale.v1.CreateACLPolicyResponse
}
var file_headscale_v1_acl_proto_depIdxs = []int32{
	5, // 0: headscale.v1.ACLPolicy.groups:type_name -> headscale.v1.ACLGroup
	6, // 1: headscale.v1.ACLPolicy.hosts:type_name -> headscale.v1.ACLHost
	4, // 2: headscale.v1.ACLPolicy.acls:type_name -> headscale.v1.ACL
	8, // 3: headscale.v1.ACLPolicy.auto_approvers:type_name -> headscale.v1.ACLAutoApprovers
	7, // 4: headscale.v1.ACLPolicy.tag_owners:type_name -> headscale.v1.ACLTagOwner
	1, // 5: headscale.v1.ACL.action:type_name -> headscale.v1.ACL.Action
	0, // 6: headscale.v1.ACL.protocol:type_name -> headscale.v1.Protocol.Enum
	9, // 7: headscale.v1.ACLAutoApprovers.routes:type_name -> headscale.v1.ACLRoutes
	2, // 8: headscale.v1.CreateACLPolicyRequest.acl_policy:type_name -> headscale.v1.ACLPolicy
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_headscale_v1_acl_proto_init() }
func file_headscale_v1_acl_proto_init() {
	if File_headscale_v1_acl_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_headscale_v1_acl_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ACLPolicy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_headscale_v1_acl_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Protocol); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_headscale_v1_acl_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ACL); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_headscale_v1_acl_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ACLGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_headscale_v1_acl_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ACLHost); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_headscale_v1_acl_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ACLTagOwner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_headscale_v1_acl_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ACLAutoApprovers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_headscale_v1_acl_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ACLRoutes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_headscale_v1_acl_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateACLPolicyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_headscale_v1_acl_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateACLPolicyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_headscale_v1_acl_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_headscale_v1_acl_proto_goTypes,
		DependencyIndexes: file_headscale_v1_acl_proto_depIdxs,
		EnumInfos:         file_headscale_v1_acl_proto_enumTypes,
		MessageInfos:      file_headscale_v1_acl_proto_msgTypes,
	}.Build()
	File_headscale_v1_acl_proto = out.File
	file_headscale_v1_acl_proto_rawDesc = nil
	file_headscale_v1_acl_proto_goTypes = nil
	file_headscale_v1_acl_proto_depIdxs = nil
}
